"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ObjectKey = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _regeneratorRuntime2 = _interopRequireDefault(require("@babel/runtime/helpers/regeneratorRuntime"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = require("react");
var _semicolon = require("../semicolon");
var _value = require("../value");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["className", "value", "keyName", "parentName", "quotes", "label", "namespace", "editableValue", "onEdit", "highlightUpdates", "render"];
var ObjectKey = exports.ObjectKey = function ObjectKey(props) {
  var className = props.className,
    value = props.value,
    keyName = props.keyName,
    parentName = props.parentName,
    quotes = props.quotes,
    label = props.label,
    namespace = props.namespace,
    editableValue = props.editableValue,
    onEdit = props.onEdit,
    _props$highlightUpdat = props.highlightUpdates,
    highlightUpdates = _props$highlightUpdat === void 0 ? true : _props$highlightUpdat,
    render = props.render,
    reset = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    editable = _useState2[0],
    setEditable = _useState2[1];
  var _useState3 = (0, _react.useState)(label),
    _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
    curentLabel = _useState4[0],
    setCurentLabel = _useState4[1];
  (0, _react.useEffect)(function () {
    return setCurentLabel(label);
  }, [label]);
  var $edit = (0, _react.useRef)(null);
  (0, _semicolon.useHighlight)({
    value: value,
    highlightUpdates: highlightUpdates,
    highlightContainer: $edit
  });
  var click = function click(evn) {
    evn.stopPropagation();
    if (!editableValue) return;
    if (typeof keyName !== 'string') return;
    if (editable) return;
    setEditable(true);
    if ($edit.current) {
      var _$edit$current;
      $edit.current.contentEditable = 'true';
      (_$edit$current = $edit.current) === null || _$edit$current === void 0 || _$edit$current.focus();
    }
  };
  var blur = /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/(0, _regeneratorRuntime2["default"])().mark(function _callee() {
      var _$edit$current2, result;
      return (0, _regeneratorRuntime2["default"])().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!$edit.current) {
              _context.next = 8;
              break;
            }
            if (!onEdit) {
              _context.next = 6;
              break;
            }
            _context.next = 4;
            return onEdit({
              value: $edit.current.innerText,
              oldValue: curentLabel,
              namespace: namespace,
              keyName: keyName,
              parentName: parentName,
              type: 'key'
            });
          case 4:
            result = _context.sent;
            if (result) {
              setCurentLabel($edit.current.innerText);
            } else {
              $edit.current.innerText = curentLabel;
            }
          case 6:
            $edit.current.contentEditable = 'false';
            (_$edit$current2 = $edit.current) === null || _$edit$current2 === void 0 || _$edit$current2.focus();
          case 8:
            setEditable(false);
          case 9:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function blur() {
      return _ref.apply(this, arguments);
    };
  }();
  var focus = function focus() {
    if ($edit.current) {
      var _$edit$current3;
      $edit.current.contentEditable = 'true';
      (_$edit$current3 = $edit.current) === null || _$edit$current3 === void 0 || _$edit$current3.focus();
    }
  };
  var keyDown = function keyDown(evn) {
    if (evn.key === 'Enter') {
      evn.stopPropagation();
      evn.preventDefault();
      $edit.current.contentEditable = 'false';
    }
  };
  (0, _react.useEffect)(function () {
    if ($edit.current) {
      $edit.current.addEventListener('paste', function (e) {
        e.preventDefault();
        // @ts-ignore
        var text = e.clipboardData.getData('text/plain');
        document.execCommand('insertHTML', false, text);
      });
    }
  }, [$edit]);
  var style = {
    minWidth: 34,
    minHeight: 18,
    paddingInline: 3,
    display: 'inline-block'
  };
  var content = typeof keyName === 'string' ? "".concat(quotes).concat(curentLabel).concat(quotes) : curentLabel;
  var spanProps = {
    onClick: click,
    onFocus: focus,
    onBlur: blur,
    onKeyDown: keyDown,
    style: editable ? style : {},
    contentEditable: editable,
    spellCheck: false,
    autoFocus: editable,
    suppressContentEditableWarning: true,
    children: editable ? curentLabel : content
  };
  if (render) {
    spanProps.value = value;
    spanProps.keyName = keyName;
    spanProps.parentName = parentName;
    return render((0, _objectSpread2["default"])((0, _objectSpread2["default"])((0, _objectSpread2["default"])({
      className: className
    }, reset), spanProps), {}, {
      parentName: parentName,
      label: curentLabel,
      children: editable ? curentLabel : content,
      ref: $edit
    }));
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_value.Label, (0, _objectSpread2["default"])((0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    className: className
  }, reset), {}, {
    autoFocus: editable
  }, spanProps), {}, {
    ref: $edit
  }));
};
ObjectKey.displayName = 'JVR.ObjectKey';
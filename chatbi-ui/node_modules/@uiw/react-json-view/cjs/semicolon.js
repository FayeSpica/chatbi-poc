"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Semicolon = void 0;
exports.useHighlight = useHighlight;
exports.usePrevious = usePrevious;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _react = require("react");
var _value = require("./value");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["children", "render", "color", "value", "className", "keyName", "highlightUpdates", "quotes", "style", "namespace", "parentName"];
function usePrevious(value) {
  var ref = (0, _react.useRef)();
  (0, _react.useEffect)(function () {
    ref.current = value;
  });
  return ref.current;
}
function useHighlight(_ref) {
  var value = _ref.value,
    highlightUpdates = _ref.highlightUpdates,
    highlightContainer = _ref.highlightContainer;
  var prevValue = usePrevious(value);
  var isHighlight = (0, _react.useMemo)(function () {
    if (!highlightUpdates || prevValue === undefined) return false;
    // highlight if value type changed
    if ((0, _typeof2["default"])(value) !== (0, _typeof2["default"])(prevValue)) {
      return true;
    }
    if (typeof value === 'number') {
      // notice: NaN !== NaN
      if (isNaN(value) && isNaN(prevValue)) return false;
      return value !== prevValue;
    }
    // highlight if isArray changed
    if (Array.isArray(value) !== Array.isArray(prevValue)) {
      return true;
    }
    // not highlight object/function
    // deep compare they will be slow
    if ((0, _typeof2["default"])(value) === 'object' || typeof value === 'function') {
      return false;
    }

    // highlight if not equal
    if (value !== prevValue) {
      return true;
    }
    return false;
  }, [highlightUpdates, value]);
  (0, _react.useEffect)(function () {
    if (highlightContainer && highlightContainer.current && isHighlight && 'animate' in highlightContainer.current) {
      highlightContainer.current.animate([{
        backgroundColor: 'var(--w-rjv-update-color, #ebcb8b)'
      }, {
        backgroundColor: ''
      }], {
        duration: 1000,
        easing: 'ease-in'
      });
    }
  }, [isHighlight, value, highlightContainer]);
}
var Semicolon = exports.Semicolon = function Semicolon(_ref2) {
  var children = _ref2.children,
    render = _ref2.render,
    color = _ref2.color,
    value = _ref2.value,
    _ref2$className = _ref2.className,
    className = _ref2$className === void 0 ? 'w-rjv-object-key' : _ref2$className,
    keyName = _ref2.keyName,
    highlightUpdates = _ref2.highlightUpdates,
    quotes = _ref2.quotes,
    style = _ref2.style,
    namespace = _ref2.namespace,
    parentName = _ref2.parentName,
    props = (0, _objectWithoutProperties2["default"])(_ref2, _excluded);
  var highlightContainer = (0, _react.useRef)(null);
  var content = typeof keyName === 'string' ? "".concat(quotes).concat(keyName).concat(quotes) : keyName;
  if (render) {
    return render((0, _objectSpread2["default"])((0, _objectSpread2["default"])({
      className: className
    }, props), {}, {
      value: value,
      namespace: namespace,
      style: (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, style), {}, {
        color: color
      }),
      parentName: parentName,
      keyName: keyName,
      quotes: quotes,
      label: keyName,
      children: content
    }));
  }
  useHighlight({
    value: value,
    highlightUpdates: highlightUpdates,
    highlightContainer: highlightContainer
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_value.Label, (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    className: className,
    color: color
  }, props), {}, {
    ref: highlightContainer,
    children: content
  }));
};
Semicolon.displayName = 'JSR.Semicolon';
/// <reference types="react" />
import type { JsonViewProps } from '../';
import type { CountInfoExtraProps } from './countInfoExtra';
export interface JsonViewEditorProps<T extends object> extends Omit<JsonViewProps<T>, 'shortenTextAfterLength'> {
    /**
     * When a callback function is passed in, edit functionality is enabled. The callback is invoked before edits are completed.
     * @returns {boolean}  Returning false from onEdit will prevent the change from being made.
     */
    onEdit?: (option: {
        value: unknown;
        oldValue: unknown;
        keyName?: string | number;
        parentName?: string | number;
        namespace?: Array<string | number>;
        type?: 'value' | 'key';
    }) => boolean;
    /**
     * When a callback function is passed in, add functionality is enabled. The callback is invoked before additions are completed.
     * @returns {boolean} Returning false from onAdd will prevent the change from being made.
     */
    onAdd?: CountInfoExtraProps<T>['onAdd'];
    /**
     * When a callback function is passed in, delete functionality is enabled. The callback is invoked before deletions are completed.
     * @returns Returning false from onDelete will prevent the change from being made.
     */
    onDelete?: CountInfoExtraProps<T>['onDelete'];
    /** Whether enable edit feature. @default true */
    editable?: boolean;
}
declare const JsonViewEditor: import("react").ForwardRefExoticComponent<Omit<JsonViewEditorProps<object>, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
export default JsonViewEditor;

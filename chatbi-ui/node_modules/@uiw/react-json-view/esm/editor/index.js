import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["onEdit", "components", "editable", "displayDataTypes", "onAdd", "onDelete"];
import { forwardRef } from 'react';
import JsonView from '../';
import { ObjectKey } from './objectKey';
import { ReValue } from './value';
import { CountInfoExtra } from './countInfoExtra';
import { jsx as _jsx } from "react/jsx-runtime";
var JsonViewEditor = /*#__PURE__*/forwardRef((props, ref) => {
  var {
      onEdit,
      components,
      editable = true,
      displayDataTypes = true,
      onAdd,
      onDelete
    } = props,
    reset = _objectWithoutPropertiesLoose(props, _excluded);
  var comps = _extends({}, components, {
    countInfoExtra: reprops => /*#__PURE__*/_jsx(CountInfoExtra, _extends({}, reprops, {
      editable: editable,
      onAdd: onAdd,
      onDelete: onDelete
    })),
    objectKey: reprops => /*#__PURE__*/_jsx(ObjectKey, _extends({}, reprops, {
      editableValue: editable,
      onEdit: onEdit,
      render: components == null ? void 0 : components.objectKey
    })),
    value: reprops => {
      return /*#__PURE__*/_jsx(ReValue, _extends({}, reprops, {
        editableValue: editable,
        displayDataTypes: displayDataTypes,
        onDelete: onDelete,
        onEdit: onEdit
      }));
    }
  });
  return /*#__PURE__*/_jsx(JsonView, _extends({}, reset, {
    displayDataTypes: false,
    components: comps,
    ref: ref
  }));
});
JsonViewEditor.displayName = 'JVR.JsonViewEditor';
export default JsonViewEditor;
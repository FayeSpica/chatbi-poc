import type { FC, PropsWithChildren } from 'react';
import type { LabelProps } from './value';
import type { JsonViewProps } from './';
export declare function usePrevious<T>(value: T): T | undefined;
interface UseHighlight {
    value: any;
    highlightUpdates?: boolean;
    highlightContainer: React.MutableRefObject<HTMLSpanElement | null>;
}
export declare function useHighlight({ value, highlightUpdates, highlightContainer }: UseHighlight): void;
export interface SemicolonProps extends LabelProps {
    highlightUpdates?: boolean;
    keyName?: string | number;
    parentName?: string | number;
    quotes?: JsonViewProps<object>['quotes'];
    value?: object;
    label?: string;
    namespace?: Array<string | number>;
    render?: (props: SemicolonProps) => React.ReactNode;
}
export declare const Semicolon: FC<PropsWithChildren<SemicolonProps>>;
export {};
